{"version":3,"sources":["api/posts.js","components/PostsList/PostsList.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","getUserPosts","userId","a","fetch","response","json","userPosts","data","filter","post","getPostDetails","postId","postDetails","PostsList","currentUser","selectedPostId","setSelectedPostId","useState","posts","setPosts","useEffect","then","className","map","id","title","key","type","onClick","getPostComments","postComments","comment","deleteComment","commentId","method","result","addComment","name","email","body","JSON","stringify","NewCommentForm","setName","setEmail","setBody","placeholder","value","onChange","target","PostDetails","comments","setComments","flagCommentsHidden","setFlagCommentsHidden","postContent","setPostContent","length","App","setCurrentUser","Number","ReactDOM","render","document","getElementById"],"mappings":"iXAAMA,EAAW,wCAEJC,EAAY,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sEACHC,MAAMJ,GADH,cACpBK,EADoB,gBAEFA,EAASC,OAFP,UAEpBC,EAFoB,OAIX,IAAXL,EAJsB,yCAKjBK,EAAUC,MALO,gCAQnBD,EAAUC,KAAKC,QAAO,SAAAC,GAAI,OAAIA,EAAKR,SAAWA,MAR3B,2CAAH,sDAWZS,EAAc,uCAAG,WAAMC,GAAN,iBAAAT,EAAA,sEACLC,MAAM,GAAD,OAAIJ,GAAJ,OAAeY,IADf,cACtBP,EADsB,gBAEFA,EAASC,OAFP,cAEtBO,EAFsB,yBAIrBA,EAAYL,MAJS,2CAAH,sDCRdM,EAAY,SAAC,GAInB,IAHLC,EAGI,EAHJA,YACAC,EAEI,EAFJA,eACAC,EACI,EADJA,kBACI,EACsBC,mBAAS,IAD/B,mBACGC,EADH,KACUC,EADV,KAOJ,OAJAC,qBAAU,WACRpB,EAAac,GAAaO,KAAKF,KAC9B,CAACL,IAGF,yBAAKQ,UAAU,aACb,sCAEA,wBAAIA,UAAU,mBAEVJ,EAAMK,KAAI,gBAAGC,EAAH,EAAGA,GAAIvB,EAAP,EAAOA,OAAQwB,EAAf,EAAeA,MAAf,OACR,wBACEH,UAAU,kBACVI,IAAKF,GAEL,6BACE,4CACavB,EADb,OAGCwB,GAEH,4BACEE,KAAK,SACLL,UAAU,2BACVM,QAAS,WAOPZ,EANID,IAAmBS,EAMLA,EALE,KAQpBT,IAAmBS,EAAM,QAAU,eC9C/CzB,EAAW,0CAEJ8B,EAAe,uCAAG,WAAMlB,GAAN,iBAAAT,EAAA,sEACNC,MAAMJ,GADA,cACvBK,EADuB,gBAEFA,EAASC,OAFP,cAEvByB,EAFuB,yBAItBA,EAAavB,KAAKC,QAAO,SAAAuB,GAAO,OAAIA,EAAQpB,SAAWA,MAJjC,2CAAH,sDAOfqB,EAAa,uCAAG,WAAMC,GAAN,eAAA/B,EAAA,sEACNC,MAAM,GAAD,OACrBJ,EADqB,YACTkC,GACf,CAAEC,OAAQ,WAHe,cACrBC,EADqB,yBAMpBA,GANoB,2CAAH,sDASbC,EAAU,uCAAG,WAAMzB,EAAQ0B,EAAMC,EAAOC,GAA3B,eAAArC,EAAA,sEACHC,MACnBJ,EACA,CACEmC,OAAQ,OACRK,KAAMC,KAAKC,UAAU,CACnB9B,SACA0B,OACAC,QACAC,WATkB,cAClBJ,EADkB,yBAcjBA,GAdiB,2CAAH,4DCdVO,G,MAAiB,SAAC,GAAwB,IAAtB3B,EAAqB,EAArBA,eAAqB,EAC5BE,mBAAS,IADmB,mBAC7CoB,EAD6C,KACvCM,EADuC,OAE1B1B,mBAAS,IAFiB,mBAE7CqB,EAF6C,KAEtCM,EAFsC,OAG5B3B,mBAAS,IAHmB,mBAG7CsB,EAH6C,KAGvCM,EAHuC,KAKpD,OACE,0BAAMvB,UAAU,kBACd,yBAAKA,UAAU,cACb,2BACEK,KAAK,OACLU,KAAK,OACLS,YAAY,YACZxB,UAAU,wBACVyB,MAAOV,EACPW,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBN,EAAQM,EAAOF,WAI7C,yBAAKzB,UAAU,cACb,2BACEK,KAAK,OACLU,KAAK,QACLS,YAAY,aACZxB,UAAU,wBACVyB,MAAOT,EACPU,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBL,EAASK,EAAOF,WAI9C,yBAAKzB,UAAU,cACb,8BACEe,KAAK,OACLS,YAAY,oBACZxB,UAAU,wBACVyB,MAAOR,EACPS,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBJ,EAAQI,EAAOF,WAI7C,4BACEpB,KAAK,SACLL,UAAU,uCACVM,QAAS,WACPQ,EAAWrB,EAAgBsB,EAAMC,EAAOC,GACxCI,EAAQ,IACRC,EAAS,IACTC,EAAQ,MAPZ,oBCpCOK,G,MAAc,SAAC,GAAwB,IAAtBnC,EAAqB,EAArBA,eAAqB,EACjBE,mBAAS,IADQ,mBAC1CkC,EAD0C,KAChCC,EADgC,OAEGnC,oBAAS,GAFZ,mBAE1CoC,EAF0C,KAEtBC,EAFsB,OAGXrC,mBAAS,IAHE,mBAG1CsC,EAH0C,KAG7BC,EAH6B,KAUjD,OALApC,qBAAU,WACRS,EAAgBd,GAAgBM,KAAK+B,GACrC1C,EAAeK,GAAgBM,KAAKmC,KACnC,CAACzC,EAAgBoC,IAGlB,yBAAK7B,UAAU,eACb,6CAEA,6BAASA,UAAU,qBACjB,2BACGiC,EAAYhB,OAIjB,6BAASjB,UAAU,yBACjB,4BACEK,KAAK,SACLL,UAAU,SACVM,QAAS,kBAAM0B,GAAuBD,KAHxC,UAMOA,EAAqB,OAAS,OANrC,YAM+CF,EAASM,OANxD,cAUA,wBAAInC,UAAU,qBACX+B,GACCF,EAAS5B,KAAI,gBAAGgB,EAAH,EAAGA,KAAMf,EAAT,EAASA,GAAT,OACX,wBAAIF,UAAU,yBAAyBI,IAAKF,GAC1C,4BACEG,KAAK,SACLL,UAAU,oCACVM,QAAS,WACPI,EAAcR,GACdK,EAAgBd,GAAgBM,KAAK+B,KALzC,KAUA,2BACGb,SAQb,iCACE,yBAAKjB,UAAU,6BACb,kBAAC,EAAD,CAAgBP,eAAgBA,SCT3B2C,EAhDH,WAAO,IAAD,EACsBzC,mBAAS,GAD/B,mBACTH,EADS,KACI6C,EADJ,OAE4B1C,mBAAS,GAFrC,mBAETF,EAFS,KAEOC,EAFP,KAIhB,OACE,yBAAKM,UAAU,OACb,4BAAQA,UAAU,eAChB,qDAGE,4BACEA,UAAU,qBACV0B,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBU,EAAeC,OAAOX,EAAOF,UAEvD,4BAAQA,MAAM,KAAd,aACA,4BAAQA,MAAM,KAAd,iBACA,4BAAQA,MAAM,KAAd,gBACA,4BAAQA,MAAM,KAAd,oBACA,4BAAQA,MAAM,KAAd,oBACA,4BAAQA,MAAM,KAAd,oBACA,4BAAQA,MAAM,KAAd,wBACA,4BAAQA,MAAM,KAAd,mBACA,4BAAQA,MAAM,KAAd,4BACA,4BAAQA,MAAM,KAAd,mBACA,4BAAQA,MAAM,MAAd,oBAKN,0BAAMzB,UAAU,aACd,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACER,YAAaA,EACbC,eAAgBA,EAChBC,kBAAmBA,KAIvB,yBAAKM,UAAU,gBACO,IAAnBP,EACG,kBAAC,EAAD,CAAaA,eAAgBA,IAC7B,OC1Cd8C,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.6b45ea45.chunk.js","sourcesContent":["const BASE_URL = 'https://mate-api.herokuapp.com/posts/';\n\nexport const getUserPosts = async(userId) => {\n  const response = await fetch(BASE_URL);\n  const userPosts = await response.json();\n\n  if (userId === 0) {\n    return userPosts.data;\n  }\n\n  return userPosts.data.filter(post => post.userId === userId);\n};\n\nexport const getPostDetails = async(postId) => {\n  const response = await fetch(`${BASE_URL}${postId}`);\n  const postDetails = await response.json();\n\n  return postDetails.data;\n};\n","import React, { useState, useEffect } from 'react';\nimport './PostsList.scss';\nimport propTypes from 'prop-types';\nimport { getUserPosts } from '../../api/posts';\n\nexport const PostsList = ({\n  currentUser,\n  selectedPostId,\n  setSelectedPostId,\n}) => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    getUserPosts(currentUser).then(setPosts);\n  }, [currentUser]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {\n          posts.map(({ id, userId, title }) => (\n            <li\n              className=\"PostsList__item\"\n              key={id}\n            >\n              <div>\n                <b>\n                  {`[User #${userId}]:`}\n                </b>\n                {title}\n              </div>\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => {\n                  if (selectedPostId === id) {\n                    setSelectedPostId(0);\n\n                    return;\n                  }\n\n                  setSelectedPostId(id);\n                }}\n              >\n                {(selectedPostId === id) ? 'Close' : 'Open'}\n              </button>\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  currentUser: propTypes.number.isRequired,\n  selectedPostId: propTypes.number.isRequired,\n  setSelectedPostId: propTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com/comments';\n\nexport const getPostComments = async(postId) => {\n  const response = await fetch(BASE_URL);\n  const postComments = await response.json();\n\n  return postComments.data.filter(comment => comment.postId === postId);\n};\n\nexport const deleteComment = async(commentId) => {\n  const result = await fetch(\n    `${BASE_URL}/${commentId}`,\n    { method: 'DELETE' },\n  );\n\n  return result;\n};\n\nexport const addComment = async(postId, name, email, body) => {\n  const result = await fetch(\n    BASE_URL,\n    {\n      method: 'POST',\n      body: JSON.stringify({\n        postId,\n        name,\n        email,\n        body,\n      }),\n    },\n  );\n\n  return result;\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport { addComment } from '../../api/comments';\n\nexport const NewCommentForm = ({ selectedPostId }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  return (\n    <form className=\"NewCommentForm\">\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={({ target }) => setName(target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={({ target }) => setEmail(target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={({ target }) => setBody(target.value)}\n        />\n      </div>\n\n      <button\n        type=\"button\"\n        className=\"NewCommentForm__submit-button button\"\n        onClick={() => {\n          addComment(selectedPostId, name, email, body);\n          setName('');\n          setEmail('');\n          setBody('');\n        }}\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { getPostComments, deleteComment } from '../../api/comments';\nimport { getPostDetails } from '../../api/posts';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [comments, setComments] = useState([]);\n  const [flagCommentsHidden, setFlagCommentsHidden] = useState(false);\n  const [postContent, setPostContent] = useState({});\n\n  useEffect(() => {\n    getPostComments(selectedPostId).then(setComments);\n    getPostDetails(selectedPostId).then(setPostContent);\n  }, [selectedPostId, comments]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>\n          {postContent.body}\n        </p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => setFlagCommentsHidden(!flagCommentsHidden)}\n        >\n          {\n            `${flagCommentsHidden ? 'Show' : 'Hide'} ${comments.length} comments`\n          }\n        </button>\n\n        <ul className=\"PostDetails__list\">\n          {flagCommentsHidden || (\n            comments.map(({ body, id }) => (\n              <li className=\"PostDetails__list-item\" key={id}>\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => {\n                    deleteComment(id);\n                    getPostComments(selectedPostId).then(setComments);\n                  }}\n                >\n                  X\n                </button>\n                <p>\n                  {body}\n                </p>\n              </li>\n            )))}\n\n        </ul>\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm selectedPostId={selectedPostId} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: propTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [currentUser, setCurrentUser] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={({ target }) => setCurrentUser(Number(target.value))}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            currentUser={currentUser}\n            selectedPostId={selectedPostId}\n            setSelectedPostId={setSelectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId !== 0\n            ? <PostDetails selectedPostId={selectedPostId} />\n            : ''}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}